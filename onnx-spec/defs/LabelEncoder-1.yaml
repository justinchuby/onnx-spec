domain: ai.onnx.ml
name: LabelEncoder
since_version: 1
min_input: 1
max_input: 1
min_output: 1
max_output: 1
doc: '

  Converts strings to integers and vice versa.


  If the string default value is set, it will convert integers to strings.

  If the int default value is set, it will convert strings to integers.


  Each operator converts either integers to strings or strings to integers, depending

  on which default value attribute is provided. Only one default value attribute

  should be defined.


  When converting from integers to strings, the string is fetched from the

  ''classes_strings'' list, by simple indexing.


  When converting from strings to integers, the string is looked up in the list

  and the index at which it is found is used as the converted value.

  '
attributes:
- name: classes_strings
  description: A list of labels.
  type: AttrType.STRINGS
  required: false
  default_value: null
- name: default_int64
  description: An integer to use when an input string value is not found in the map.<br>One
    and only one of the 'default_*' attributes must be defined.
  type: AttrType.INT
  required: false
  default_value: -1
- name: default_string
  description: A string to use when an input integer value is not found in the map.<br>One
    and only one of the 'default_*' attributes must be defined.
  type: AttrType.STRING
  required: false
  default_value: _Unused
inputs:
- name: X
  type_str: T1
  description: Input data.
  min_arity: 1
  tags: []
outputs:
- name: Y
  type_str: T2
  description: Output data. If strings are input, the output values are integers,
    and vice versa.
  min_arity: 1
  tags: []
type_constraints:
- type_param_str: T1
  description: The input type must be a tensor of integers or strings, of any shape.
  allowed_type_strs:
  - tensor(string)
  - tensor(int64)
- type_param_str: T2
  description: The output type will be a tensor of strings or integers, and will have
    the same shape as the input.
  allowed_type_strs:
  - tensor(string)
  - tensor(int64)
support_level: COMMON
deprecated: false
