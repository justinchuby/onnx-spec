domain: ''
name: CenterCropPad
since_version: 18
min_input: 2
max_input: 2
min_output: 1
max_output: 1
doc: '

  Center crop or pad an input to given dimensions.


  The crop/pad dimensions can be specified for a subset of the `axes`. Non-specified
  dimensions will not be

  cropped or padded.


  If the input dimensions are bigger than the crop shape, a centered cropping window
  is extracted from the input.

  If the input dimensions are smaller than the crop shape, the input is padded on
  each side equally,

  so that the input is centered in the output.

  '
attributes:
- name: axes
  description: If provided, it specifies a subset of axes that 'shape' refer to. If
    not provided, all axes are assumed [0, 1, ..., r-1], where r = rank(data). Negative
    value means counting dimensions from the back. Accepted range is [-r, r-1], where
    r = rank(data). Behavior is undefined if an axis is repeated.
  type: AttrType.INTS
  required: false
  default_value: null
inputs:
- name: input_data
  type_str: T
  description: Input to extract the centered crop from.
  min_arity: 1
  tags:
  - differentiable
- name: shape
  type_str: Tind
  description: 1-D tensor representing the cropping window dimensions.
  min_arity: 1
  tags:
  - non-differentiable
outputs:
- name: output_data
  type_str: T
  description: Output data.
  min_arity: 1
  tags:
  - differentiable
type_constraints:
- type_param_str: T
  description: Constrain input and output types to all tensor types.
  allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(bfloat16)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(string)
  - tensor(bool)
  - tensor(complex64)
  - tensor(complex128)
- type_param_str: Tind
  description: Constrain indices to integer types
  allowed_type_strs:
  - tensor(int32)
  - tensor(int64)
support_level: COMMON
deprecated: false
