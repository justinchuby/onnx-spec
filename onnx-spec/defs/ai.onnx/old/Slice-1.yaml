domain: ''
name: Slice
since_version: 1
min_input: 1
max_input: 1
min_output: 1
max_output: 1
doc: |-
  Produces a slice of the input tensor along multiple axes. Similar to numpy:
  https://numpy.org/doc/stable/reference/routines.indexing.html
  Slices uses `axes`, `starts` and `ends` attributes to specify the start and end
  dimension for each axis in the list of axes, it uses this information to
  slice the input `data` tensor. If a negative value is passed for any of the
  start or end indices, it represent number of elements before the end of that
  dimension. If the value passed to start or end is larger than the `n` (the
  number of elements in this dimension), it represents `n`. For slicing to the
  end of a dimension with unknown size, it is recommended to pass in `INT_MAX`.
  If `axes` are omitted, they are set to `[0, ..., ndim-1]`.
  Example 1:
    data = [
        [1, 2, 3, 4],
        [5, 6, 7, 8],
    ]
    axes = [0, 1]
    starts = [1, 0]
    ends = [2, 3]
    result = [
        [5, 6, 7],
    ]
  Example 2:
    data = [
        [1, 2, 3, 4],
        [5, 6, 7, 8],
    ]
    starts = [0, 1]
    ends = [-1, 1000]
    result = [
        [2, 3, 4],
    ]
attributes:
  - name: ends
    description: >-
      Ending indices (exclusive) of corresponding axis in axes`
    type: INTS
    required: true
  - name: starts
    description: >-
      Starting indices of corresponding axis in `axes`
    type: INTS
    required: true
  - name: axes
    description: >-
      Axes that `starts` and `ends` apply to. It's optional. If not present, will
      be treated as [0, 1, ..., len(`starts`) - 1].
    type: INTS
    required: false
inputs:
  - name: data
    type_str: T
    description: Tensor of data to extract slices from.
    min_arity: 1
    tags: []
outputs:
  - name: output
    type_str: T
    description: Sliced data tensor.
    min_arity: 1
    tags: []
type_constraints:
  - type_param_str: T
    description: Constrain input and output types to all tensor types.
    allowed_type_strs:
      - tensor(uint8)
      - tensor(uint16)
      - tensor(uint32)
      - tensor(uint64)
      - tensor(int8)
      - tensor(int16)
      - tensor(int32)
      - tensor(int64)
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(string)
      - tensor(bool)
      - tensor(complex64)
      - tensor(complex128)
support_level: COMMON
deprecated: false
