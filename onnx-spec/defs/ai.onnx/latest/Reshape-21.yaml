domain: ''
name: Reshape
since_version: 21
min_input: 2
max_input: 2
min_output: 1
max_output: 1
doc: |-
  Reshape the input tensor similar to numpy.reshape.
  First input is the data tensor, second input is a shape tensor which specifies the output shape. It outputs the reshaped tensor.
  At most one dimension of the new shape can be -1. In this case, the value is
  inferred from the size of the tensor and the remaining dimensions. A dimension
  could also be 0, in which case the actual dimension value is unchanged (i.e. taken
  from the input tensor). If 'allowzero' is set, and the new shape includes 0, the
  dimension will be set explicitly to zero (i.e. not taken from input tensor).
  Shape (second input) could be an empty shape, which means converting to a scalar.
  The input tensor's shape and the output tensor's shape are required to have the same number of elements.

  If the attribute 'allowzero' is set, it is invalid for the specified shape to
  contain both a zero value and -1, as the value of the dimension corresponding
  to -1 cannot be determined uniquely.
attributes:
  - name: allowzero
    description: >-
      (Optional) By default, when any value in the 'shape' input is equal to zero
      the corresponding dimension value is copied from the input tensor dynamically.
      allowzero=1 indicates that if any value in the 'shape' input is set to zero,
      the zero value is honored, similar to NumPy.
    type: INT
    required: false
    default_value: 0
inputs:
  - name: data
    type_str: T
    description: An input tensor.
    min_arity: 1
    tags:
      - differentiable
  - name: shape
    type_str: tensor(int64)
    description: Specified shape for output.
    min_arity: 1
    tags:
      - non-differentiable
outputs:
  - name: reshaped
    type_str: T
    description: Reshaped data.
    min_arity: 1
    tags:
      - differentiable
type_constraints:
  - type_param_str: T
    description: Constrain input and output types to all tensor types.
    allowed_type_strs:
      - tensor(uint8)
      - tensor(uint16)
      - tensor(uint32)
      - tensor(uint64)
      - tensor(int8)
      - tensor(int16)
      - tensor(int32)
      - tensor(int64)
      - tensor(bfloat16)
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(string)
      - tensor(bool)
      - tensor(complex64)
      - tensor(complex128)
      - tensor(float8e4m3fn)
      - tensor(float8e4m3fnuz)
      - tensor(float8e5m2)
      - tensor(float8e5m2fnuz)
      - tensor(uint4)
      - tensor(int4)
support_level: COMMON
deprecated: false
