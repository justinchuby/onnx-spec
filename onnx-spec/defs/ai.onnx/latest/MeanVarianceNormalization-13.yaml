domain: ''
name: MeanVarianceNormalization
since_version: 13
min_input: 1
max_input: 1
min_output: 1
max_output: 1
doc: |-
  A MeanVarianceNormalization Function: Perform mean variance normalization
  on the input tensor X using formula: `(X-EX)/sqrt(E(X-EX)^2)`
attributes:
  - name: axes
    description: >-
      A list of integers, along which to reduce. The default is to calculate along
      axes [0,2,3] for calculating mean and variance along each channel. Two variables
      with the same C-coordinate are associated with the same mean and variance.
    type: INTS
    required: false
    default_value:
      - 0
      - 2
      - 3
inputs:
  - name: X
    type_str: T
    description: Input tensor
    min_arity: 1
    tags:
      - differentiable
outputs:
  - name: Y
    type_str: T
    description: Output tensor
    min_arity: 1
    tags:
      - differentiable
type_constraints:
  - type_param_str: T
    description: Constrain input and output types to all numeric tensors.
    allowed_type_strs:
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(bfloat16)
function: |-
  <
    domain: "",
    opset_import: ["" : 18]
  >
  MeanVarianceNormalization <axes>(X) => (Y)
  {
     Exponent = Constant <value: tensor = float {2}> ()
     Epsilon = Constant <value: tensor = float {1e-09}> ()
     axes = Constant <value_ints: ints = @axes> ()
     X_RM = ReduceMean (X, axes)
     EX_squared = Pow (X_RM, Exponent)
     X_squared = Pow (X, Exponent)
     E_Xsquared = ReduceMean (X_squared, axes)
     Variance = Sub (E_Xsquared, EX_squared)
     STD = Sqrt (Variance)
     X_variance = Sub (X, X_RM)
     Processed_STD = Add (STD, Epsilon)
     Y = Div (X_variance, Processed_STD)
  }
support_level: COMMON
deprecated: false
