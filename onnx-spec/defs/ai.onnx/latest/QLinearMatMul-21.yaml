domain: ''
name: QLinearMatMul
since_version: 21
min_input: 8
max_input: 8
min_output: 1
max_output: 1
doc: |-
  Matrix product that behaves like numpy.matmul: https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.matmul.html.
  It consumes two quantized input tensors, their scales and zero points, scale and zero point of output,
  and computes the quantized output. The quantization formula is y = saturate((x / y_scale) + y_zero_point).
  For (x / y_scale), it is rounding to nearest ties to even. Refer to https://en.wikipedia.org/wiki/Rounding for details.
  Scale and zero point must have same shape. They must be either scalar (per tensor) or N-D tensor
  (per row for 'a' and per column for 'b'). Scalar refers to per tensor quantization whereas N-D refers to per row
  or per column quantization. If the input is 2D of shape [M, K] then zero point and scale tensor may be
  an M element vector [v_1, v_2, ..., v_M] for per row quantization and K element vector of shape [v_1, v_2, ..., v_K]
  for per column quantization. If the input is N-D tensor with shape [D1, D2, M, K] then zero point and scale tensor may
  have shape [D1, D2, M, 1] for per row quantization and shape [D1, D2, 1, K] for per column quantization.
  Production must never overflow, and accumulation may overflow if and only if in 32 bits.
attributes: []
inputs:
  - name: a
    type_str: T1
    description: N-dimensional quantized matrix a
    min_arity: 1
    tags:
      - non-differentiable
  - name: a_scale
    type_str: TS
    description: scale of quantized input a
    min_arity: 1
    tags:
      - non-differentiable
  - name: a_zero_point
    type_str: T1
    description: zero point of quantized input a
    min_arity: 1
    tags:
      - non-differentiable
  - name: b
    type_str: T2
    description: N-dimensional quantized matrix b
    min_arity: 1
    tags:
      - non-differentiable
  - name: b_scale
    type_str: TS
    description: scale of quantized input b
    min_arity: 1
    tags:
      - non-differentiable
  - name: b_zero_point
    type_str: T2
    description: zero point of quantized input b
    min_arity: 1
    tags:
      - non-differentiable
  - name: y_scale
    type_str: TS
    description: scale of quantized output y
    min_arity: 1
    tags:
      - non-differentiable
  - name: y_zero_point
    type_str: T3
    description: zero point of quantized output y
    min_arity: 1
    tags:
      - non-differentiable
outputs:
  - name: y
    type_str: T3
    description: Quantized matrix multiply results from a * b
    min_arity: 1
    tags:
      - non-differentiable
type_constraints:
  - type_param_str: TS
    description: Constrain scales.
    allowed_type_strs:
      - tensor(float)
      - tensor(float16)
      - tensor(bfloat16)
  - type_param_str: T1
    description: The type of input a and its zeropoint.
    allowed_type_strs:
      - tensor(int8)
      - tensor(uint8)
      - tensor(float8e4m3fn)
      - tensor(float8e4m3fnuz)
      - tensor(float8e5m2)
      - tensor(float8e5m2fnuz)
  - type_param_str: T2
    description: The type of input b and its zeropoint.
    allowed_type_strs:
      - tensor(int8)
      - tensor(uint8)
      - tensor(float8e4m3fn)
      - tensor(float8e4m3fnuz)
      - tensor(float8e5m2)
      - tensor(float8e5m2fnuz)
  - type_param_str: T3
    description: The type of the output and its zeropoint.
    allowed_type_strs:
      - tensor(int8)
      - tensor(uint8)
      - tensor(float8e4m3fn)
      - tensor(float8e4m3fnuz)
      - tensor(float8e5m2)
      - tensor(float8e5m2fnuz)
support_level: COMMON
deprecated: false
