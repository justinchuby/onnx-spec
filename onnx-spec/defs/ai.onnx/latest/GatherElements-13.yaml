domain: ''
name: GatherElements
since_version: 13
min_input: 2
max_input: 2
min_output: 1
max_output: 1
doc: |-
  GatherElements takes two inputs `data` and `indices` of the same rank r >= 1
  and an optional attribute `axis` that identifies an axis of `data`
  (by default, the outer-most axis, that is axis 0). It is an indexing operation
  that produces its output by indexing into the input data tensor at index
  positions determined by elements of the `indices` tensor.
  Its output shape is the same as the shape of `indices` and consists of one value
  (gathered from the `data`) for each element in `indices`.

  For instance, in the 3-D case (r = 3), the output produced is determined
  by the following equations:
  ```
  out[i][j][k] = input[index[i][j][k]][j][k] if axis = 0,
  out[i][j][k] = input[i][index[i][j][k]][k] if axis = 1,
  out[i][j][k] = input[i][j][index[i][j][k]] if axis = 2,
  ```

  This operator is also the inverse of ScatterElements. It is similar to Torch's gather operation.

  Example 1:
  ```
  data = [
      [1, 2],
      [3, 4],
  ]
  indices = [
      [0, 0],
      [1, 0],
  ]
  axis = 1
  output = [
      [1, 1],
      [4, 3],
  ]
  ```
  Example 2:
  ```
  data = [
      [1, 2, 3],
      [4, 5, 6],
      [7, 8, 9],
  ]
  indices = [
      [1, 2, 0],
      [2, 0, 0],
  ]
  axis = 0
  output = [
      [4, 8, 3],
      [7, 2, 3],
  ]
  ```
attributes:
  - name: axis
    description: >-
      Which axis to gather on. Negative value means counting dimensions from the back.
      Accepted range is [-r, r-1] where r = rank(data).
    type: INT
    required: false
    default_value: 0
inputs:
  - name: data
    type_str: T
    description: Tensor of rank r >= 1.
    min_arity: 1
    tags:
      - differentiable
  - name: indices
    type_str: Tind
    description: Tensor of int32/int64 indices, with the same rank r as the 
      input. All index values are expected to be within bounds [-s, s-1] along 
      axis of size s. It is an error if any of the index values are out of 
      bounds.
    min_arity: 1
    tags:
      - non-differentiable
outputs:
  - name: output
    type_str: T
    description: Tensor of the same shape as indices.
    min_arity: 1
    tags:
      - differentiable
type_constraints:
  - type_param_str: T
    description: Constrain input and output types to any tensor type.
    allowed_type_strs:
      - tensor(uint8)
      - tensor(uint16)
      - tensor(uint32)
      - tensor(uint64)
      - tensor(int8)
      - tensor(int16)
      - tensor(int32)
      - tensor(int64)
      - tensor(bfloat16)
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(string)
      - tensor(bool)
      - tensor(complex64)
      - tensor(complex128)
  - type_param_str: Tind
    description: Constrain indices to integer types
    allowed_type_strs:
      - tensor(int32)
      - tensor(int64)
support_level: COMMON
deprecated: false
