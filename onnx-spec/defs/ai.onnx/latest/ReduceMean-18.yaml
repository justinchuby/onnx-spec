domain: ''
name: ReduceMean
since_version: 18
min_input: 1
max_input: 2
min_output: 1
max_output: 1
doc: |-
  Computes the mean of the input tensor's elements along the provided axes. The resulting
  tensor has the same rank as the input if `keepdims` equals 1. If `keepdims` equals 0, then
  the resulting tensor has the reduced dimension pruned. Input tensors of rank zero are
  valid. Reduction over an empty set of values yields undefined.


  The above behavior is similar to numpy, with the exception that numpy defaults `keepdims`
  to `False` instead of `True`.
attributes:
  - name: keepdims
    description: >-
      Keep the reduced dimension or not, default 1 means keep reduced dimension.
    type: INT
    required: false
    default_value: 1
  - name: noop_with_empty_axes
    description: >-
      Defines behavior if 'axes' is empty. Default behavior with 'false' is to reduce
      all axes. When axes is empty and this attribute is set to true, input tensor
      will not be reduced,and the output tensor would be equivalent to input tensor.
    type: INT
    required: false
    default_value: 0
inputs:
  - name: data
    type_str: T
    description: An input tensor.
    min_arity: 1
    tags:
      - differentiable
  - name: axes
    type_str: tensor(int64)
    description: Optional input list of integers, along which to reduce. The default
      is to reduce over all the dimensions of the input tensor if 'noop_with_empty_axes'
      is false, else act as an Identity op when 'noop_with_empty_axes' is true. Accepted
      range is [-r, r-1] where r = rank(data).
    min_arity: 1
    tags:
      - optional
      - non-differentiable
outputs:
  - name: reduced
    type_str: T
    description: Reduced output tensor.
    min_arity: 1
    tags:
      - differentiable
type_constraints:
  - type_param_str: T
    description: Constrain input and output types to numeric tensors.
    allowed_type_strs:
      - tensor(uint32)
      - tensor(uint64)
      - tensor(int32)
      - tensor(int64)
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(bfloat16)
support_level: COMMON
deprecated: false
