domain: ''
name: ReverseSequence
since_version: 10
min_input: 2
max_input: 2
min_output: 1
max_output: 1
doc: |-
  Reverse batch of sequences having different lengths specified by `sequence_lens`.

  For each slice i iterating on batch axis, the operator reverses the first sequence_lens[i] elements on time axis,
  and copies elements whose index's beyond sequence_lens[i] to the output. So the output slice i contains reversed
  sequences on the first sequence_lens[i] elements, then have original values copied for the other elements.

  Example 1:
    input = [[0.0, 4.0, 8.0,  12.0],
             [1.0, 5.0, 9.0,  13.0],
             [2.0, 6.0, 10.0, 14.0],
             [3.0, 7.0, 11.0, 15.0]]
    sequence_lens = [4, 3, 2, 1]
    time_axis = 0
    batch_axis = 1

    output = [[3.0, 6.0, 9.0,  12.0],
              [2.0, 5.0, 8.0,  13.0],
              [1.0, 4.0, 10.0, 14.0],
              [0.0, 7.0, 11.0, 15.0]]

  Example 2:
    input = [[0.0,  1.0,  2.0,  3.0 ],
             [4.0,  5.0,  6.0,  7.0 ],
             [8.0,  9.0,  10.0, 11.0],
             [12.0, 13.0, 14.0, 15.0]]
    sequence_lens = [1, 2, 3, 4]
    time_axis = 1
    batch_axis = 0

    output = [[0.0,  1.0,  2.0,  3.0 ],
              [5.0,  4.0,  6.0,  7.0 ],
              [10.0, 9.0,  8.0,  11.0],
              [15.0, 14.0, 13.0, 12.0]]
attributes:
  - name: batch_axis
    description: >-
      (Optional) Specify which axis is batch axis. Must be one of 1 (default), or
      0.
    type: INT
    required: false
    default_value: 1
  - name: time_axis
    description: >-
      (Optional) Specify which axis is time axis. Must be one of 0 (default), or 1.
    type: INT
    required: false
    default_value: 0
inputs:
  - name: input
    type_str: T
    description: Tensor of rank r >= 2.
    min_arity: 1
    tags: []
  - name: sequence_lens
    type_str: tensor(int64)
    description: Tensor specifying lengths of the sequences in a batch. It has shape
      `[batch_size]`.
    min_arity: 1
    tags: []
outputs:
  - name: Y
    type_str: T
    description: Tensor with same shape of input.
    min_arity: 1
    tags: []
type_constraints:
  - type_param_str: T
    description: Input and output types can be of any tensor type.
    allowed_type_strs:
      - tensor(uint8)
      - tensor(uint16)
      - tensor(uint32)
      - tensor(uint64)
      - tensor(int8)
      - tensor(int16)
      - tensor(int32)
      - tensor(int64)
      - tensor(float16)
      - tensor(float)
      - tensor(double)
      - tensor(string)
      - tensor(bool)
      - tensor(complex64)
      - tensor(complex128)
support_level: COMMON
deprecated: false
