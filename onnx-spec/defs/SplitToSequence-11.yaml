attributes:
- default_value: 0
  description: Which axis to split on. A negative value means counting dimensions
    from the back. Accepted range is [-rank, rank-1].
  name: axis
  required: false
  type: AttrType.INT
- default_value: 1
  description: Keep the split dimension or not. Default 1, which means we keep split
    dimension. If input 'split' is specified, this attribute is ignored.
  name: keepdims
  required: false
  type: AttrType.INT
deprecated: false
doc: '

  Split a tensor into a sequence of tensors, along the specified ''axis''.

  Lengths of the parts can be specified using the optional argument ''split''.

  If the argument `split'' is not specified, a default scalar value of 1

  is used as the value of `split''.

  ''split'' must contain only positive numbers.

  ''split'' is either a scalar (tensor of empty shape), or a 1-D tensor.

  If ''split'' is a scalar, then ''input'' will be split into chunks all of size ''split''

  if possible. The last chunk alone may be smaller than ''split'' if the ''input''
  size

  along the given axis ''axis'' is not divisible by ''split''.

  If ''split'' is a 1-dimensional tensor, the input tensor is split into ''size(split)''
  chunks,

  with lengths of the parts on ''axis'' specified in ''split''. In this scenario,
  the sum of entries

  in ''split'' must be equal to the dimension size of input tensor on ''axis''.

  '
domain: ''
inputs:
- description: The tensor to split
  min_arity: 1
  name: input
  tags: []
  type_str: T
- description: 'Length of each output. It can be either a scalar(tensor of empty shape),
    or a 1-D tensor. All values must be >= 0. '
  min_arity: 1
  name: split
  tags:
  - optional
  type_str: I
max_input: 2
max_output: 1
min_input: 1
min_output: 1
name: SplitToSequence
outputs:
- description: One or more outputs forming a sequence of tensors after splitting
  min_arity: 1
  name: output_sequence
  tags: []
  type_str: S
since_version: 11
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(string)
  - tensor(bool)
  - tensor(complex64)
  - tensor(complex128)
  description: Constrain input types to all tensor types.
  type_param_str: T
- allowed_type_strs:
  - tensor(int32)
  - tensor(int64)
  description: Constrain split size to integral tensor.
  type_param_str: I
- allowed_type_strs:
  - seq(tensor(uint8))
  - seq(tensor(uint16))
  - seq(tensor(uint32))
  - seq(tensor(uint64))
  - seq(tensor(int8))
  - seq(tensor(int16))
  - seq(tensor(int32))
  - seq(tensor(int64))
  - seq(tensor(float16))
  - seq(tensor(float))
  - seq(tensor(double))
  - seq(tensor(string))
  - seq(tensor(bool))
  - seq(tensor(complex64))
  - seq(tensor(complex128))
  description: Constrain output types to all tensor types.
  type_param_str: S
