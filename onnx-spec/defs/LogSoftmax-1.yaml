attributes:
- default_value: 1
  description: Describes the axis of the inputs when coerced to 2D; defaults to one
    because the 0th axis most likely describes the batch_size
  name: axis
  required: false
  type: AttrType.INT
deprecated: false
doc: "\nThe operator computes the logsoftmax (log of softmax) values for each layer\
  \ in the batch\n of the given input. The input is a 2-D tensor (Tensor<float>) of\
  \ size\n(batch_size x input_feature_dimensions). The output tensor has the same\
  \ shape\nand contains the logsoftmax values of the corresponding input.\n\nInput\
  \ does not need to explicitly be a 2D vector; rather, it will be\ncoerced into one.\
  \ For an arbitrary n-dimensional tensor\ninput \\in [a_0, a_1, ..., a_{k-1}, a_k,\
  \ ..., a_{n-1}] and k is\nthe axis provided, then input will be coerced into a 2-dimensional\
  \ tensor with\ndimensions [a_0 * ... * a_{k-1}, a_k * ... * a_{n-1}]. For the default\n\
  case where axis=1, this means the input tensor will be coerced into a 2D tensor\n\
  of dimensions [a_0, a_1 * ... * a_{n-1}], where a_0 is often the batch size.\nIn\
  \ this situation, we must have a_0 = N and a_1 * ... * a_{n-1} = D.\nEach of these\
  \ dimensions must be matched correctly, or else the operator\nwill throw errors.\n"
domain: ''
inputs:
- description: The input tensor that's coerced into a 2D matrix of size (NxD) as described
    above.
  min_arity: 1
  name: input
  tags: []
  type_str: T
max_input: 1
max_output: 1
min_input: 1
min_output: 1
name: LogSoftmax
outputs:
- description: The output values with the same shape as input tensor (the original
    size without coercion).
  min_arity: 1
  name: output
  tags: []
  type_str: T
since_version: 1
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  description: Constrain input and output types to float tensors.
  type_param_str: T
