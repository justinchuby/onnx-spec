attributes:
- default_value: -1
  description: Dimension on which to do the sort.
  name: axis
  required: false
  type: AttrType.INT
deprecated: false
doc: "\nRetrieve the top-K elements along a specified axis. Given an input tensor\
  \ of\nshape [a_1, a_2, ..., a_n, r] and integer argument k, return two outputs:\n\
  \  -Value tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]\n\
  \    which contains the values of the top k elements along the specified axis\n\
  \  -Index tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n] which\n\
  \   contains the indices of the top k elements (original indices from the input\n\
  \   tensor).\n\nGiven two equivalent values, this operator uses the indices along\
  \ the axis  as\n a tiebreaker. That is, the element with the lower index will appear\
  \ first.\n"
domain: ''
inputs:
- description: Tensor of shape [a_1, a_2, ..., a_n, r]
  min_arity: 1
  name: X
  tags: []
  type_str: T
- description: A 1-D tensor containing a single positive value corresponding to the
    number of top elements to retrieve
  min_arity: 1
  name: K
  tags: []
  type_str: tensor(int64)
max_input: 2
max_output: 2
min_input: 2
min_output: 2
name: TopK
outputs:
- description: Tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]
    containing top K values from the input tensor
  min_arity: 1
  name: Values
  tags: []
  type_str: T
- description: Tensor of shape [a_1, a_2, ..., a_{axis-1}, k, a_{axis+1}, ... a_n]
    containing the corresponding input tensor indices for the top K values.
  min_arity: 1
  name: Indices
  tags: []
  type_str: I
since_version: 10
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  description: Constrain input and output types to float tensors.
  type_param_str: T
- allowed_type_strs:
  - tensor(int64)
  description: Constrain index tensor to int64
  type_param_str: I
