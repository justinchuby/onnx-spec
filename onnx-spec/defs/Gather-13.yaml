attributes:
- default_value: 0
  description: Which axis to gather on. Negative value means counting dimensions from
    the back. Accepted range is [-r, r-1] where r = rank(data).
  name: axis
  required: false
  type: AttrType.INT
deprecated: false
doc: "\nGiven `data` tensor of rank r >= 1, and `indices` tensor of rank q, gather\n\
  entries of the axis dimension of `data` (by default outer-most one as axis=0) indexed\
  \ by `indices`, and concatenates\nthem in an output tensor of rank q + (r - 1).\n\
  \nIf `axis = 0`, let `k = indices[i_{0}, ..., i_{q-1}]`\nthen `output[i_{0}, ...,\
  \ i_{q-1}, j_{0}, ..., j_{r-2}] = input[k , j_{0}, ..., j_{r-2}]`:\n\n```\ndata\
  \ = [\n    [1.0, 1.2],\n    [2.3, 3.4],\n    [4.5, 5.7],\n]\nindices = [\n    [0,\
  \ 1],\n    [1, 2],\n]\noutput = [\n    [\n        [1.0, 1.2],\n        [2.3, 3.4],\n\
  \    ],\n    [\n        [2.3, 3.4],\n        [4.5, 5.7],\n    ],\n]\n```\n\nIf `axis\
  \ = 1`, let `k = indices[i_{0}, ..., i_{q-1}]`\nthen `output[j_{0}, i_{0}, ...,\
  \ i_{q-1}, j_{1}, ..., j_{r-2}] = input[j_{0}, k, j_{1}, ..., j_{r-2}]`:\n\n```\n\
  data = [\n    [1.0, 1.2, 1.9],\n    [2.3, 3.4, 3.9],\n    [4.5, 5.7, 5.9],\n]\n\
  indices = [\n    [0, 2],\n]\naxis = 1,\noutput = [\n        [[1.0, 1.9]],\n    \
  \    [[2.3, 3.9]],\n        [[4.5, 5.9]],\n]\n```\n"
domain: ''
inputs:
- description: Tensor of rank r >= 1.
  min_arity: 1
  name: data
  tags:
  - differentiable
  type_str: T
- description: Tensor of int32/int64 indices, of any rank q. All index values are
    expected to be within bounds [-s, s-1] along axis of size s. It is an error if
    any of the index values are out of bounds.
  min_arity: 1
  name: indices
  tags:
  - non-differentiable
  type_str: Tind
max_input: 2
max_output: 1
min_input: 2
min_output: 1
name: Gather
outputs:
- description: Tensor of rank q + (r - 1).
  min_arity: 1
  name: output
  tags:
  - differentiable
  type_str: T
since_version: 13
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(bfloat16)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(string)
  - tensor(bool)
  - tensor(complex64)
  - tensor(complex128)
  description: Constrain input and output types to any tensor type.
  type_param_str: T
- allowed_type_strs:
  - tensor(int32)
  - tensor(int64)
  description: Constrain indices to integer types
  type_param_str: Tind
