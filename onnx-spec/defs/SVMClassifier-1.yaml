attributes:
- default_value: null
  description: Class labels if using integer labels.<br>One and only one of the 'classlabels_*'
    attributes must be defined.
  name: classlabels_ints
  required: false
  type: AttrType.INTS
- default_value: null
  description: Class labels if using string labels.<br>One and only one of the 'classlabels_*'
    attributes must be defined.
  name: classlabels_strings
  required: false
  type: AttrType.STRINGS
- default_value: null
  description: ''
  name: coefficients
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: List of 3 elements containing gamma, coef0, and degree, in that order.
    Zero if unused for the kernel.
  name: kernel_params
  required: false
  type: AttrType.FLOATS
- default_value: LINEAR
  description: The kernel type, one of 'LINEAR,' 'POLY,' 'RBF,' 'SIGMOID'.
  name: kernel_type
  required: false
  type: AttrType.STRING
- default_value: NONE
  description: Indicates the transform to apply to the score. <br>One of 'NONE,' 'SOFTMAX,'
    'LOGISTIC,' 'SOFTMAX_ZERO,' or 'PROBIT'
  name: post_transform
  required: false
  type: AttrType.STRING
- default_value: null
  description: First set of probability coefficients.
  name: prob_a
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: Second set of probability coefficients. This array must be same size
    as prob_a.<br>If these are provided then output Z are probability estimates, otherwise
    they are raw scores.
  name: prob_b
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: ''
  name: rho
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: ''
  name: support_vectors
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: ''
  name: vectors_per_class
  required: false
  type: AttrType.INTS
deprecated: false
doc: "\n    Support Vector Machine classifier\n"
domain: ai.onnx.ml
inputs:
- description: Data to be classified.
  min_arity: 1
  name: X
  tags: []
  type_str: T1
max_input: 1
max_output: 2
min_input: 1
min_output: 2
name: SVMClassifier
outputs:
- description: Classification outputs (one class per example).
  min_arity: 1
  name: Y
  tags: []
  type_str: T2
- description: Class scores (one per class per example), if prob_a and prob_b are
    provided they are probabilities for each class, otherwise they are raw scores.
  min_arity: 1
  name: Z
  tags: []
  type_str: tensor(float)
since_version: 1
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(float)
  - tensor(double)
  - tensor(int64)
  - tensor(int32)
  description: The input must be a tensor of a numeric type, either [C] or [N,C].
  type_param_str: T1
- allowed_type_strs:
  - tensor(string)
  - tensor(int64)
  description: The output type will be a tensor of strings or integers, depending
    on which of the classlabels_* attributes is used. Its size will match the bactch
    size of the input.
  type_param_str: T2
