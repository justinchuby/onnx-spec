attributes:
- default_value: 1
  description: Boolean. Indicates whether upper or lower part of matrix is retained.
    Default is true.
  name: upper
  required: false
  type: AttrType.INT
deprecated: false
doc: '

  Given a 2-D matrix or batches of 2-D matrices, returns the upper or lower triangular
  part of the tensor(s).

  The attribute "upper" determines whether the upper or lower part is retained. If
  set to true,

  the upper triangular matrix is retained. Lower triangular matrix is retained otherwise.

  Default value for the "upper" attribute is true.

  Trilu takes one input tensor of shape [*, N, M], where * is zero or more batch dimensions.
  The upper triangular part consists

  of the elements on and above the given diagonal (k). The lower triangular part consists
  of elements on and below the diagonal.

  All other elements in the matrix are set to zero.

  If k = 0, the triangular part on and above/below the main diagonal is retained.

  If upper is set to true, a positive k retains the upper triangular matrix excluding
  the main diagonal and (k-1) diagonals above it.

  A negative k value retains the main diagonal and |k| diagonals below it.

  If upper is set to false, a positive k retains the lower triangular matrix including
  the main diagonal and k diagonals above it.

  A negative k value excludes the main diagonal and (|k|-1) diagonals below it.

  '
domain: ''
inputs:
- description: Input tensor of rank 2 or higher.
  min_arity: 1
  name: input
  tags:
  - differentiable
  type_str: T
- description: A 0-D tensor containing a single value corresponding to the number
    diagonals above or below the main diagonal to exclude or include. Default value
    is 0 if it's not specified.
  min_arity: 1
  name: k
  tags:
  - optional
  - non-differentiable
  type_str: tensor(int64)
max_input: 2
max_output: 1
min_input: 1
min_output: 1
name: Trilu
outputs:
- description: Output tensor of the same type and shape as the input tensor.
  min_arity: 1
  name: output
  tags:
  - differentiable
  type_str: T
since_version: 14
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(bfloat16)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(string)
  - tensor(bool)
  - tensor(complex64)
  - tensor(complex128)
  description: Constrain input and output types to all tensor types.
  type_param_str: T
