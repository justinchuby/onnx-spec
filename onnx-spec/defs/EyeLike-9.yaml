attributes:
- default_value: null
  description: (Optional) The data type for the elements of the output tensor. If
    not specified,the data type of the input tensor T1 is used. If input tensor T1
    is also notspecified, then type defaults to 'float'.
  name: dtype
  required: false
  type: AttrType.INT
- default_value: 0
  description: (Optional) Index of the diagonal to be populated with ones. Default
    is 0. If T2 is the output, this op sets T2[i, i+k] = 1. k = 0 populates the main
    diagonal, k > 0 populates an upper diagonal,  and k < 0 populates a lower diagonal.
  name: k
  required: false
  type: AttrType.INT
deprecated: false
doc: '

  Generate a 2D tensor (matrix) with ones on the diagonal and zeros everywhere else.
  Only 2D

  tensors are supported, i.e. input T1 must be of rank 2. The shape of the output
  tensor is the

  same as the input tensor. The data type can be specified by the ''dtype'' argument.
  If

  ''dtype'' is not specified, then the type of input tensor is used. By default, the
  main diagonal

  is populated with ones, but attribute ''k'' can be used to populate upper or lower
  diagonals.

  The ''dtype'' argument must be one of the data types specified in the ''DataType''
  enum field in the

  TensorProto message and be valid as an output type.

  '
domain: ''
inputs:
- description: 2D input tensor to copy shape, and optionally, type information from.
  min_arity: 1
  name: input
  tags: []
  type_str: T1
max_input: 1
max_output: 1
min_input: 1
min_output: 1
name: EyeLike
outputs:
- description: Output tensor, same shape as input tensor T1.
  min_arity: 1
  name: output
  tags: []
  type_str: T2
since_version: 9
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(bool)
  description: Constrain input types. Strings and complex are not supported.
  type_param_str: T1
- allowed_type_strs:
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(bool)
  description: Constrain output types. Strings and complex are not supported.
  type_param_str: T2
