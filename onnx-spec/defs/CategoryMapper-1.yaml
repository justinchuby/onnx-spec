attributes:
- default_value: null
  description: The integers of the map. This sequence must be the same length as the
    'cats_strings' sequence.
  name: cats_int64s
  required: false
  type: AttrType.INTS
- default_value: null
  description: The strings of the map. This sequence must be the same length as the
    'cats_int64s' sequence
  name: cats_strings
  required: false
  type: AttrType.STRINGS
- default_value: -1
  description: An integer to use when an input string value is not found in the map.<br>One
    and only one of the 'default_*' attributes must be defined.
  name: default_int64
  required: false
  type: AttrType.INT
- default_value: _Unused
  description: A string to use when an input integer value is not found in the map.<br>One
    and only one of the 'default_*' attributes must be defined.
  name: default_string
  required: false
  type: AttrType.STRING
deprecated: false
doc: "\n    Converts strings to integers and vice versa.\n\n    Two sequences of equal\
  \ length are used to map between integers and strings,\n    with strings and integers\
  \ at the same index detailing the mapping.\n\n    Each operator converts either\
  \ integers to strings or strings to integers, depending\n    on which default value\
  \ attribute is provided. Only one default value attribute\n    should be defined.\n\
  \n    If the string default value is set, it will convert integers to strings.\n\
  \    If the int default value is set, it will convert strings to integers.\n"
domain: ai.onnx.ml
inputs:
- description: Input data
  min_arity: 1
  name: X
  tags: []
  type_str: T1
max_input: 1
max_output: 1
min_input: 1
min_output: 1
name: CategoryMapper
outputs:
- description: Output data. If strings are input, the output values are integers,
    and vice versa.
  min_arity: 1
  name: Y
  tags: []
  type_str: T2
since_version: 1
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(string)
  - tensor(int64)
  description: The input must be a tensor of strings or integers, either [N,C] or
    [C].
  type_param_str: T1
- allowed_type_strs:
  - tensor(string)
  - tensor(int64)
  description: The output is a tensor of strings or integers. Its shape will be the
    same as the input shape.
  type_param_str: T2
