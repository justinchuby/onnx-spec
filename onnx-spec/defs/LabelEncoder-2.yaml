attributes:
- default_value: -0.0
  description: A float.
  name: default_float
  required: false
  type: AttrType.FLOAT
- default_value: -1
  description: An integer.
  name: default_int64
  required: false
  type: AttrType.INT
- default_value: _Unused
  description: A string.
  name: default_string
  required: false
  type: AttrType.STRING
- default_value: null
  description: A list of floats.
  name: keys_floats
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: A list of ints.
  name: keys_int64s
  required: false
  type: AttrType.INTS
- default_value: null
  description: A list of strings. One and only one of 'keys_*'s should be set.
  name: keys_strings
  required: false
  type: AttrType.STRINGS
- default_value: null
  description: A list of floats.
  name: values_floats
  required: false
  type: AttrType.FLOATS
- default_value: null
  description: A list of ints.
  name: values_int64s
  required: false
  type: AttrType.INTS
- default_value: null
  description: A list of strings. One and only one of 'value_*'s should be set.
  name: values_strings
  required: false
  type: AttrType.STRINGS
deprecated: false
doc: "\n    Maps each element in the input tensor to another value.\n\n    The mapping\
  \ is determined by the two parallel attributes, 'keys_*' and\n    'values_*' attribute.\
  \ The i-th value in the specified 'keys_*' attribute\n    would be mapped to the\
  \ i-th value in the specified 'values_*' attribute. It\n    implies that input's\
  \ element type and the element type of the specified\n    'keys_*' should be identical\
  \ while the output type is identical to the\n    specified 'values_*' attribute.\
  \ If an input element can not be found in the\n    specified 'keys_*' attribute,\
  \ the 'default_*' that matches the specified\n    'values_*' attribute may be used\
  \ as its output value.\n\n    Let's consider an example which maps a string tensor\
  \ to an integer tensor.\n    Assume and 'keys_strings' is [\"Amy\", \"Sally\"],\
  \ 'values_int64s' is [5, 6],\n    and 'default_int64' is '-1'.  The input [\"Dori\"\
  , \"Amy\", \"Amy\", \"Sally\",\n    \"Sally\"] would be mapped to [-1, 5, 5, 6,\
  \ 6].\n\n    Since this operator is an one-to-one mapping, its input and output\
  \ shapes\n    are the same. Notice that only one of 'keys_*'/'values_*' can be set.\n\
  \n    For key look-up, bit-wise comparison is used so even a float NaN can be\n\
  \    mapped to a value in 'values_*' attribute.\n\n"
domain: ai.onnx.ml
inputs:
- description: Input data. It can be either tensor or scalar.
  min_arity: 1
  name: X
  tags: []
  type_str: T1
max_input: 1
max_output: 1
min_input: 1
min_output: 1
name: LabelEncoder
outputs:
- description: Output data.
  min_arity: 1
  name: Y
  tags: []
  type_str: T2
since_version: 2
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(string)
  - tensor(int64)
  - tensor(float)
  description: The input type is a tensor of any shape.
  type_param_str: T1
- allowed_type_strs:
  - tensor(string)
  - tensor(int64)
  - tensor(float)
  description: Output type is determined by the specified 'values_*' attribute.
  type_param_str: T2
