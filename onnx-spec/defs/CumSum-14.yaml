attributes:
- default_value: 0
  description: If set to 1 will return exclusive sum in which the top element is not
    included. In other terms, if set to 1, the j-th output element would be the sum
    of the first (j-1) elements. Otherwise, it would be the sum of the first j elements.
  name: exclusive
  required: false
  type: AttrType.INT
- default_value: 0
  description: If set to 1 will perform the sums in reverse direction.
  name: reverse
  required: false
  type: AttrType.INT
deprecated: false
doc: "\nPerforms cumulative sum of the input elements along the given axis.\nBy default,\
  \ it will do the sum inclusively meaning the first element is copied as is.\nThrough\
  \ an `exclusive` attribute, this behavior can change to exclude the first element.\n\
  It can also perform summation in the opposite direction of the axis. For that, set\
  \ `reverse` attribute to 1.\n\nExample:\n```\ninput_x = [1, 2, 3]\naxis=0\noutput\
  \ = [1, 3, 6]\nexclusive=1\noutput = [0, 1, 3]\nexclusive=0\nreverse=1\noutput =\
  \ [6, 5, 3]\nexclusive=1\nreverse=1\noutput = [5, 3, 0]\n```\n "
domain: ''
inputs:
- description: An input tensor that is to be processed.
  min_arity: 1
  name: x
  tags:
  - differentiable
  type_str: T
- description: A 0-D tensor. Must be in the range [-rank(x), rank(x)-1]. Negative
    value means counting dimensions from the back.
  min_arity: 1
  name: axis
  tags:
  - non-differentiable
  type_str: T2
max_input: 2
max_output: 1
min_input: 2
min_output: 1
name: CumSum
outputs:
- description: Output tensor of the same type as 'x' with cumulative sums of the x's
    elements
  min_arity: 1
  name: y
  tags:
  - differentiable
  type_str: T
since_version: 14
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int32)
  - tensor(int64)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(bfloat16)
  description: Constrain input and output types to high-precision numeric tensors.
  type_param_str: T
- allowed_type_strs:
  - tensor(int32)
  - tensor(int64)
  description: axis tensor can be int32 or int64 only
  type_param_str: T2
