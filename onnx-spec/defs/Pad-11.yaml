domain: ''
name: Pad
since_version: 11
min_input: 2
max_input: 3
min_output: 1
max_output: 1
doc: "\nGiven a tensor containing the data to be padded (`data`), a tensor containing\
  \ the number of start and end pad values for axis (`pads`), (optionally) a `mode`,\
  \ and (optionally) `constant_value`,\na padded tensor (`output`) is generated.\n\
  \nThe three supported `modes` are (similar to corresponding modes supported by `numpy.pad`):\n\
  \n1) `constant`(default) - pads with a given constant value as specified by `constant_value`\
  \ (which defaults to 0)\n\n2) `reflect` - pads with the reflection of the vector\
  \ mirrored on the first and last values of the vector along each axis\n\n3) `edge`\
  \ - pads with the edge values of array\n\n\nExample 1 (`constant` mode):\n  Insert\
  \ 0 pads to the beginning of the second dimension.\n\n  data =\n  [\n      [1.0,\
  \ 1.2],\n      [2.3, 3.4],\n      [4.5, 5.7],\n  ]\n\n  pads = [0, 2, 0, 0]\n\n\
  \  mode = 'constant'\n\n  constant_value = 0.0\n\n  output =\n  [\n      [0.0, 0.0,\
  \ 1.0, 1.2],\n      [0.0, 0.0, 2.3, 3.4],\n      [0.0, 0.0, 4.5, 5.7],\n  ]\n\n\n\
  Example 2 (`reflect` mode):\n  data =\n  [\n      [1.0, 1.2],\n      [2.3, 3.4],\n\
  \      [4.5, 5.7],\n  ]\n\n  pads = [0, 2, 0, 0]\n\n  mode = 'reflect'\n\n  output\
  \ =\n  [\n      [1.0, 1.2, 1.0, 1.2],\n      [2.3, 3.4, 2.3, 3.4],\n      [4.5,\
  \ 5.7, 4.5, 5.7],\n  ]\n\n\nExample 3 (`edge` mode):\n  data =\n  [\n      [1.0,\
  \ 1.2],\n      [2.3, 3.4],\n      [4.5, 5.7],\n  ]\n\n  pads = [0, 2, 0, 0]\n\n\
  \  mode = 'edge'\n\n  output =\n  [\n      [1.0, 1.0, 1.0, 1.2],\n      [2.3, 2.3,\
  \ 2.3, 3.4],\n      [4.5, 4.5, 4.5, 5.7],\n  ]\n\n"
attributes:
- name: mode
  description: 'Supported modes: `constant`(default), `reflect`, `edge`'
  type: AttrType.STRING
  required: false
  default_value: constant
inputs:
- name: data
  type_str: T
  description: Input tensor.
  min_arity: 1
  tags: []
- name: pads
  type_str: tensor(int64)
  description: 'Tensor of integers indicating the number of padding elements to add
    or remove (if negative) at the beginning and end of each axis. For 2D input tensor,
    it is the number of pixels. `pads` should be a 1D tensor of shape [2 * input_rank].
    `pads` format should be: [x1_begin, x2_begin,...,x1_end, x2_end,...], where xi_begin
    is the number of pad values added at the beginning of axis `i` and xi_end, the
    number of pad values added at the end of axis `i`.'
  min_arity: 1
  tags: []
- name: constant_value
  type_str: T
  description: (Optional) A scalar value to be used if the mode chosen is `constant`
    (by default it is 0).
  min_arity: 1
  tags:
  - optional
outputs:
- name: output
  type_str: T
  description: Tensor after padding.
  min_arity: 1
  tags: []
type_constraints:
- type_param_str: T
  description: Constrain input and output to only numeric types.
  allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
support_level: COMMON
deprecated: false
