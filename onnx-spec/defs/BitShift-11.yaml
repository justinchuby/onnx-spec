domain: ''
name: BitShift
since_version: 11
min_input: 2
max_input: 2
min_output: 1
max_output: 1
doc: '

  Bitwise shift operator performs element-wise operation. For each input element,
  if the

  attribute "direction" is "RIGHT", this operator moves its binary representation
  toward

  the right side so that the input value is effectively decreased. If the attribute
  "direction"

  is "LEFT", bits of binary representation moves toward the left side, which results
  the

  increase of its actual value. The input X is the tensor to be shifted and another
  input

  Y specifies the amounts of shifting. For example, if "direction" is "Right", X is
  [1, 4],

  and S is [1, 1], the corresponding output Z would be [0, 2]. If "direction" is "LEFT"
  with

  X=[1, 2] and S=[1, 2], the corresponding output Y would be [2, 8].


  Because this operator supports Numpy-style broadcasting, X''s and Y''s shapes are

  not necessarily identical.

  This operator supports **multidirectional (i.e., Numpy-style) broadcasting**; for
  more details please check [the doc](Broadcasting.md).'
attributes:
- name: direction
  description: Direction of moving bits. It can be either "RIGHT" (for right shift)
    or "LEFT" (for left shift).
  type: AttrType.STRING
  required: true
  default_value: null
inputs:
- name: X
  type_str: T
  description: First operand, input to be shifted.
  min_arity: 1
  tags:
  - non-differentiable
- name: Y
  type_str: T
  description: Second operand, amounts of shift.
  min_arity: 1
  tags:
  - non-differentiable
outputs:
- name: Z
  type_str: T
  description: Output tensor
  min_arity: 1
  tags:
  - non-differentiable
type_constraints:
- type_param_str: T
  description: Constrain input and output types to integer tensors.
  allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
support_level: COMMON
deprecated: false
