attributes:
- default_value: null
  description: The graph to be run for each sample in the sequence(s). It should have
    as many inputs and outputs as inputs and outputs to the SequenceMap function.
  name: body
  required: true
  type: AttrType.GRAPH
deprecated: false
doc: '

  Applies a sub-graph to each sample in the input sequence(s).


  Inputs can be either tensors or sequences, with the exception of the first input
  which must

  be a sequence. The length of the first input sequence will determine the number
  of samples in the

  outputs. Any other sequence inputs should have the same number of samples. The number
  of inputs

  and outputs, should match the one of the subgraph.


  For each i-th element in the output, a sample will be extracted from the input sequence(s)
  at

  the i-th position and the sub-graph will be applied to it.

  The outputs will contain the outputs of the sub-graph for each sample, in the same
  order as in

  the input.


  This operator assumes that processing each sample is independent and could executed
  in parallel

  or in any order. Users cannot expect any specific ordering in which each subgraph
  is computed.'
domain: ''
inputs:
- description: Input sequence.
  min_arity: 1
  name: input_sequence
  tags: []
  type_str: S
- description: Additional inputs to the graph
  min_arity: 0
  name: additional_inputs
  tags:
  - variadic
  - heterogeneous
  type_str: V
max_input: 2147483647
max_output: 2147483647
min_input: 1
min_output: 1
name: SequenceMap
outputs:
- description: Output sequence(s)
  min_arity: 1
  name: out_sequence
  tags:
  - variadic
  - heterogeneous
  type_str: S
since_version: 17
support_level: SupportType.COMMON
type_constraints:
- allowed_type_strs:
  - seq(tensor(uint8))
  - seq(tensor(uint16))
  - seq(tensor(uint32))
  - seq(tensor(uint64))
  - seq(tensor(int8))
  - seq(tensor(int16))
  - seq(tensor(int32))
  - seq(tensor(int64))
  - seq(tensor(float16))
  - seq(tensor(float))
  - seq(tensor(double))
  - seq(tensor(string))
  - seq(tensor(bool))
  - seq(tensor(complex64))
  - seq(tensor(complex128))
  description: Constrain input types to any sequence type.
  type_param_str: S
- allowed_type_strs:
  - tensor(uint8)
  - tensor(uint16)
  - tensor(uint32)
  - tensor(uint64)
  - tensor(int8)
  - tensor(int16)
  - tensor(int32)
  - tensor(int64)
  - tensor(float16)
  - tensor(float)
  - tensor(double)
  - tensor(string)
  - tensor(bool)
  - tensor(complex64)
  - tensor(complex128)
  - seq(tensor(uint8))
  - seq(tensor(uint16))
  - seq(tensor(uint32))
  - seq(tensor(uint64))
  - seq(tensor(int8))
  - seq(tensor(int16))
  - seq(tensor(int32))
  - seq(tensor(int64))
  - seq(tensor(float16))
  - seq(tensor(float))
  - seq(tensor(double))
  - seq(tensor(string))
  - seq(tensor(bool))
  - seq(tensor(complex64))
  - seq(tensor(complex128))
  description: Constrain to any tensor or sequence type.
  type_param_str: V
