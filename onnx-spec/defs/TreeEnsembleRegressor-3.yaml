domain: ai.onnx.ml
name: TreeEnsembleRegressor
since_version: 3
min_input: 1
max_input: 1
min_output: 1
max_output: 1
doc: '

  Tree Ensemble regressor.  Returns the regressed values for each input in N.


  All args with nodes_ are fields of a tuple of tree nodes, and

  it is assumed they are the same length, and an index i will decode the

  tuple across these inputs.  Each node id can appear only once

  for each tree id.


  All fields prefixed with target_ are tuples of votes at the leaves.


  A leaf may have multiple votes, where each vote is weighted by

  the associated target_weights index.


  All fields ending with <i>_as_tensor</i> can be used instead of the

  same parameter without the suffix if the element type is double and not float.

  All trees must have their node ids start at 0 and increment by 1.


  Mode enum is BRANCH_LEQ, BRANCH_LT, BRANCH_GTE, BRANCH_GT, BRANCH_EQ, BRANCH_NEQ,
  LEAF

  '
attributes:
- name: aggregate_function
  description: Defines how to aggregate leaf values within a target. <br>One of 'AVERAGE,'
    'SUM,' 'MIN,' 'MAX.'
  type: AttrType.STRING
  required: false
  default_value: SUM
- name: base_values
  description: Base values for regression, added to final prediction after applying
    aggregate_function; the size must be the same as the classes or can be left unassigned
    (assumed 0)
  type: AttrType.FLOATS
  required: false
  default_value: null
- name: base_values_as_tensor
  description: Base values for regression, added to final prediction after applying
    aggregate_function; the size must be the same as the classes or can be left unassigned
    (assumed 0)
  type: AttrType.TENSOR
  required: false
  default_value: null
- name: n_targets
  description: The total number of targets.
  type: AttrType.INT
  required: false
  default_value: null
- name: nodes_falsenodeids
  description: Child node if expression is false
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_featureids
  description: Feature id for each node.
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_hitrates
  description: Popularity of each node, used for performance and may be omitted.
  type: AttrType.FLOATS
  required: false
  default_value: null
- name: nodes_hitrates_as_tensor
  description: Popularity of each node, used for performance and may be omitted.
  type: AttrType.TENSOR
  required: false
  default_value: null
- name: nodes_missing_value_tracks_true
  description: 'For each node, define what to do in the presence of a NaN: use the
    ''true'' (if the attribute value is 1) or ''false'' (if the attribute value is
    0) branch based on the value in this array.<br>This attribute may be left undefined
    and the default value is false (0) for all nodes.'
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_modes
  description: The node kind, that is, the comparison to make at the node. There is
    no comparison to make at a leaf node.<br>One of 'BRANCH_LEQ', 'BRANCH_LT', 'BRANCH_GTE',
    'BRANCH_GT', 'BRANCH_EQ', 'BRANCH_NEQ', 'LEAF'
  type: AttrType.STRINGS
  required: false
  default_value: null
- name: nodes_nodeids
  description: Node id for each node. Node ids must restart at zero for each tree
    and increase sequentially.
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_treeids
  description: Tree id for each node.
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_truenodeids
  description: Child node if expression is true
  type: AttrType.INTS
  required: false
  default_value: null
- name: nodes_values
  description: Thresholds to do the splitting on for each node.
  type: AttrType.FLOATS
  required: false
  default_value: null
- name: nodes_values_as_tensor
  description: Thresholds to do the splitting on for each node.
  type: AttrType.TENSOR
  required: false
  default_value: null
- name: post_transform
  description: Indicates the transform to apply to the score. <br>One of 'NONE,' 'SOFTMAX,'
    'LOGISTIC,' 'SOFTMAX_ZERO,' or 'PROBIT'
  type: AttrType.STRING
  required: false
  default_value: NONE
- name: target_ids
  description: The index of the target that each weight is for
  type: AttrType.INTS
  required: false
  default_value: null
- name: target_nodeids
  description: The node id of each weight
  type: AttrType.INTS
  required: false
  default_value: null
- name: target_treeids
  description: The id of the tree that each node is in.
  type: AttrType.INTS
  required: false
  default_value: null
- name: target_weights
  description: The weight for each target
  type: AttrType.FLOATS
  required: false
  default_value: null
- name: target_weights_as_tensor
  description: The weight for each target
  type: AttrType.TENSOR
  required: false
  default_value: null
inputs:
- name: X
  type_str: T
  description: Input of shape [N,F]
  min_arity: 1
  tags: []
outputs:
- name: Y
  type_str: tensor(float)
  description: N classes
  min_arity: 1
  tags: []
type_constraints:
- type_param_str: T
  description: The input type must be a tensor of a numeric type.
  allowed_type_strs:
  - tensor(float)
  - tensor(double)
  - tensor(int64)
  - tensor(int32)
support_level: COMMON
deprecated: false
